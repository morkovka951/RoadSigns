package com.example.m_book.roadsigns;

import android.os.Handler;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.AdView;
import com.squareup.picasso.Picasso;
import java.util.Random;

public class TestActivity extends AppCompatActivity {

    private static final String TAG = "TestActivity";
    private AdView mAdView;

    Button button, button2, button3, button4, buttonEndTest;
    ImageView imageView2;
    public volatile int randomNumbers;
    public int TRUE_ANSWER = 0;
    public int FALSE_ANSWER = 0;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_test);

        mAdView = (AdView) findViewById(R.id.adView);
        AdRequest adRequest = new AdRequest.Builder().build();
        mAdView.loadAd(adRequest);

        final Questions[] questions = new Questions[]{

                //-------------1
                new Questions(getString(R.string.q1_1), "Звуження дороги", "Напрямок повороту", "Небезпечний поворот праворуч", "Прилягання другорядної дороги", 3),
                new Questions(getString(R.string.q1_2), "Небезпечний поворот ліворуч", "Напрямок повороту", "Звуження дороги", "Прилягання другорядної дороги", 1),
                new Questions(getString(R.string.q1_3), "Аварійно небезпечна ділянка", "Напрямок повороту", "Слизька дорога", "Декілька поворотів", 4),
                new Questions(getString(R.string.q1_4), "Звуження дороги", "Аварійно небезпечна ділянкау", "Напрямок повороту", "Декілька поворотів", 3),
                new Questions(getString(R.string.q1_5), "Звуження дороги", "Аварійно небезпечна ділянкау", "Двосторонній рух", "Декілька поворотів", 1),
                new Questions(getString(R.string.q1_6), "Боковий вітер", "Крутий підйом", "Падіння каміння", "Виїзд на набережну або берег", 2),
                new Questions(getString(R.string.q1_7), "Падіння каміння", "Виїзд на набережну або берег", "Боковий вітер", "Крутий спуск", 4),
                new Questions(getString(R.string.q1_8), "Слизька дорога", "Небезпечне узбіччя", "Падіння каміння", "Виїзд на набережну або берег", 4),
                new Questions(getString(R.string.q1_9), "Слизька дорога", "Небезпечне узбіччя", "Падіння каміння", "Тунель", 4),
                new Questions(getString(R.string.q1_10), "Пагорб", "Дорожні роботи", "Нерівна дорога", "Викидання кам’яних матеріалів", 3),
                new Questions(getString(R.string.q1_11), "Викидання кам’яних матеріалів", "Пагорб", "Нерівна дорога", "Вибоїна", 2),
                new Questions(getString(R.string.q1_12), "Вибоїна", "Пагорб", "Нерівна дорога", "Тунель", 1),
                new Questions(getString(R.string.q1_13), "Виїзд на набережну або берег", "Небезпечне узбіччя", "Слизька дорога", "Нерівна дорога", 3),
                new Questions(getString(R.string.q1_14), "Слизька дорога", "Небезпечне узбіччя", "Падіння каміння", "Викидання кам’яних матеріалів", 4),
                new Questions(getString(R.string.q1_15), "Слизька дорога", "Небезпечне узбіччя", "Падіння каміння", "Виїзд на набережну або берег", 2),
                new Questions(getString(R.string.q1_16), "Викидання кам'яних матеріалів", "Небезпечне узбіччя", "Падіння каміння", "Боковий вітер", 3),
                new Questions(getString(R.string.q1_17), "Боковий вітер", "Низьколітаючі літаки", "Інша небезпека (аварійно небезпечна ділянка)", "Дорожні роботи", 1),
                new Questions(getString(R.string.q1_18), "Боковий вітер", "Низьколітаючі літаки", "Затори в дорожньому русі", "Аеропорт", 2),
                new Questions(getString(R.string.q1_19), "Перехрещення рівнозначних доріг", "Перехрещення з другорядною дорогою", "Перехрещення з рухом по колу", "Прилягання другорядної дороги", 3),
                new Questions(getString(R.string.q1_20), "Залізничний переїзд без шлагбаума", "Перехрещення рівнозначних доріг", "Залізничний переїзд із шлагбаумом", "Перехрещення з трамвайною колією", 4),
                new Questions(getString(R.string.q1_21), "Інша небезпека (аварійно небезпечна ділянка)", "Двосторонній рух", "Перехрещення рівнозначних доріг", "Перехрещення з другорядною дорогою", 3),
                new Questions(getString(R.string.q1_22), "Перехрещення з рухом по колу", "Перехрещення з другорядною дорогою", "Прилягання другорядної дороги", "Перехрещення рівнозначних доріг", 2),
                new Questions(getString(R.string.q1_23), "Прилягання другорядної дороги", "Перехрещення рівнозначних доріг", "Звуження дороги", "Перехрещення з другорядною дорогою", 1),
                new Questions(getString(R.string.q1_24), "Залізничний переїзд із шлагбаумом", "Затори в дорожньому русі", "Залізничний переїзд без шлагбаума", "Світлофорне регулювання", 4),
                new Questions(getString(R.string.q1_25), "Розвідний міст", "Слизька дорога", "Виїзд на набережну або берег", "Кінець дороги з удосконаленим покриттям", 1),
                new Questions(getString(R.string.q1_26), "Перехрещення рівнозначних доріг", "Двосторонній рух", "Затори в дорожньому русі", "Наближення до залізничного переїзду", 2),
                new Questions(getString(R.string.q1_27), "Наближення до залізничного переїзду", "Залізничний переїзд із шлагбаумом", "Одноколійна залізниця", "Залізничний переїзд без шлагбаума", 2),
                new Questions(getString(R.string.q1_28), "Одноколійна залізниця", "Наближення до залізничного переїзду", "Багатоколійна залізниця", "Залізничний переїзд без шлагбаума", 4),
                new Questions(getString(R.string.q1_29), "Одноколійна залізниця", "Залізничний переїзд із шлагбаумом", "Наближення до залізничного переїзду", "Багатоколійна залізниця", 1),
                new Questions(getString(R.string.q1_30), "Багатоколійна залізниця", "Залізничний переїзд із шлагбаумом", "Залізничний переїзд без шлагбаума", "Наближення до залізничного переїзду", 1),
                new Questions(getString(R.string.q1_31), "Багатоколійна залізниця", "Наближення до залізничного переїзду", "Одноколійна залізниця", "Залізничний переїзд із шлагбаумом", 2),
                new Questions(getString(R.string.q1_32), "Інша небезпека (аварійно небезпечна ділянка)", "Діти", "Дорожні роботи", "Пішохідний перехід", 4),
                new Questions(getString(R.string.q1_33), "Інша небезпека (аварійно небезпечна ділянка)", "Діти", "Пішохідний перехід", "Дорожні роботи", 2),
                new Questions(getString(R.string.q1_34), "Затори в дорожньому русі", "Дорожні роботи", "Дикі тварини", "Виїзд велосипедистів", 4),
                new Questions(getString(R.string.q1_35), "Інша небезпека (аварійно небезпечна ділянка)", "Перегін худоби", "Дорожні роботи", "Дикі тварини", 2),
                new Questions(getString(R.string.q1_36), "Інша небезпека (аварійно небезпечна ділянка)", "Перегін худоби", "Пішохідний перехід", "Дикі тварини", 4),
                new Questions(getString(R.string.q1_37), "Дорожні роботи", "нша небезпека (аварійно небезпечна ділянка)", "Пішохідний перехід", "Діти", 1),
                new Questions(getString(R.string.q1_38), "Дорожні роботи", "Затори в дорожньому русі", "Інша небезпека (аварійно небезпечна ділянка)", "Кінець дороги з удосконаленим покриттям", 2),
                new Questions(getString(R.string.q1_39), "Пішохідний перехід", "Дорожні роботи", "Затори в дорожньому русі", "Інша небезпека (аварійно небезпечна ділянка)", 4),
                new Questions(getString(R.string.q1_40), "Розвідний міст", "Кінець дороги з удосконаленим покриттям", "Затори в дорожньому русі", "Інша небезпека (аварійно небезпечна ділянка)", 2),

//-------------2
                new Questions(getString(R.string.q2_1), "Проїзд без зупинки заборонено", "Перевага перед зустрічним рухом", "Дати дорогу", "Перевага зустрічного руху", 3),
                new Questions(getString(R.string.q2_2), "Перевага зустрічного руху", "Проїзд без зупинки заборонено", "Кінець головної дороги", "Дати дорогу", 2),
                new Questions(getString(R.string.q2_3), "Кінець головної дороги", "Перевага зустрічного руху", "Перевага перед зустрічним рухом", "«Головна дорога", 4),
                new Questions(getString(R.string.q2_4), "Кінець головної дороги", "Перевага зустрічного руху", "Перевага перед зустрічним рухом", "Дати дорогу", 1),
                new Questions(getString(R.string.q2_5), "Дати дорогу", "Проїзд без зупинки заборонено", "Перевага зустрічного руху", "Перевага перед зустрічним рухом", 3),
                new Questions(getString(R.string.q2_6), "Кінець головної дороги", "Перевага зустрічного руху", "Дати дорогу", "Перевага перед зустрічним рухом", 4),

//-------------3
                new Questions(getString(R.string.q3_1), "Рух вантажних автомобілів заборонено", "Рух механічних транспортних засобів заборонено", "Рух заборонено", "В'їзд заборонено", 3),
                new Questions(getString(R.string.q3_2), "Рух з ручними візками заборонено", "Рух транспортних засобів, що перевозять вибухівку, заборонено", "Рух тракторів заборонено", "Рух механічних транспортних засобів заборонено", 4),
                new Questions(getString(R.string.q3_3), "Рух механічних транспортних засобів заборонено", "Рух транспортних засобів, навантаження на вісь яких перевищує … т, заборонено", "Рух вантажних автомобілів заборонено", "Рух транспортних засобів, маса яких перевищує … т, заборонено", 3),
                new Questions(getString(R.string.q3_4), "Рух транспортних засобів, що перевозять речовини, які забруднюють воду, заборонено", "Рух вантажних автомобілів заборонено", "Рух транспортних засобів, що перевозять небезпечні вантажі, заборонено", "Рух з причепом заборонено", 4),
                new Questions(getString(R.string.q3_5), "Рух тракторів заборонено", "Рух заборонено", "Рух механічних транспортних засобів заборонено", "Рух гужових возів (саней) заборонено", 1),
                new Questions(getString(R.string.q3_6), "Рух на велосипедах заборонено", "Рух тракторів заборонено", "Рух мотоциклів заборонено", "Рух на мопедах заборонено", 3),
                new Questions(getString(R.string.q3_7), "Рух на мопедах заборонено", "Рух з ручними візками заборонено", "Рух на велосипедах заборонено", "Рух пішоходів заборонено", 1),
                new Questions(getString(R.string.q3_8), "Рух мотоциклів заборонено", "Рух на мопедах заборонено", "Рух на велосипедах заборонено", "Рух пішоходів заборонено", 3),
                new Questions(getString(R.string.q3_9), "Рух на велосипедах заборонено", "Рух гужових возів (саней) заборонено", "Рух з ручними візками заборонено", "Рух пішоходів заборонено", 4),
                new Questions(getString(R.string.q3_10), "Рух заборонено", "Рух з ручними візками заборонено", "Рух на велосипедах заборонено", "Рух гужових возів (саней) заборонено", 2),
                new Questions(getString(R.string.q3_11), "Рух з ручними візками заборонено", "Перегін худоби", "Дикі тварини", "Рух гужових возів (саней) заборонено", 4),
                new Questions(getString(R.string.q3_12), "Рух транспортних засобів, що перевозять небезпечні вантажі, заборонено", "Напрямок руху транспортних засобів з небезпечними вантажами", "Рух транспортних засобів, що перевозять речовини, які забруднюють воду, заборонено", "Рух транспортних засобів, що перевозять вибухівку, заборонено", 1),
                new Questions(getString(R.string.q3_13), "Рух механічних транспортних засобів заборонено", "Рух транспортних засобів, що перевозять небезпечні вантажі, заборонено", "Рух транспортних засобів, що перевозять вибухівку, заборонено", "Рух транспортних засобів, що перевозять речовини, які забруднюють воду, заборонено", 3),
                new Questions(getString(R.string.q3_14), "Напрямок руху для вантажних автомобілів", "Обгін вантажним автомобілям заборонено", "Небезпека", "Рух транспортних засобів, що перевозять речовини, які забруднюють воду, заборонено", 4),
                new Questions(getString(R.string.q3_15), "Рух транспортних засобів, маса яких перевищує … т, заборонено", "Рух вантажних автомобілів заборонено", "Рух з причепом заборонено", "Рух транспортних засобів, навантаження на вісь яких перевищує … т, заборонено", 1),
                new Questions(getString(R.string.q3_16), "Рух транспортних засобів, навантаження на вісь яких перевищує … т, заборонено", "Рух вантажних автомобілів заборонено", "Рух з причепом заборонено", "Рух транспортних засобів, маса яких перевищує … т, заборонено", 1),
                new Questions(getString(R.string.q3_17), "Рух транспортних засобів без дотримання дистанції … м заборонено", "Рух транспортних засобів, довжина яких перевищує … м, заборонено", "Рух транспортних засобів, ширина яких перевищує … м, заборонено", "Рух транспортних засобів, висота яких перевищує … м, заборонено", 3),
                new Questions(getString(R.string.q3_18), "Рух транспортних засобів без дотримання дистанції … м заборонено", "Рух транспортних засобів, висота яких перевищує … м, заборонено", "Рух транспортних засобів, довжина яких перевищує … м, заборонено", "Рух транспортних засобів, ширина яких перевищує … м, заборонено", 2),
                new Questions(getString(R.string.q3_19), "Рух транспортних засобів без дотримання дистанції … м заборонено", "Рух транспортних засобів, висота яких перевищує … м, заборонено", "Рух транспортних засобів, довжина яких перевищує … м, заборонено", "Рух транспортних засобів, ширина яких перевищує … м, заборонено", 3),
                new Questions(getString(R.string.q3_20), "Рух транспортних засобів без дотримання дистанції … м заборонено", "Рух транспортних засобів, висота яких перевищує … м, заборонено", "Рух транспортних засобів, довжина яких перевищує … м, заборонено", "Рух транспортних засобів, ширина яких перевищує … м, заборонено", 1),
                new Questions(getString(R.string.q3_21), "В'їзд заборонено", "Зупинку заборонено", "Рух заборонено", "Рух механічних транспортних засобів заборонено", 1),
                new Questions(getString(R.string.q3_22), "Розворот заборонено", "В'їзд заборонено", "Поворот ліворуч заборонено", "Поворот праворуч заборонено", 4),
                new Questions(getString(R.string.q3_23), "Розворот заборонено", "В'їзд заборонено", "Поворот ліворуч заборонено", "Поворот праворуч заборонено", 3),
                new Questions(getString(R.string.q3_24), "Розворот заборонено", "В'їзд заборонено", "Поворот ліворуч заборонено", "Поворот праворуч заборонено", 1),
                new Questions(getString(R.string.q3_25), "Обгін заборонено", "Кінець заборони обгону", "Обгін вантажним автомобілям заборонено", "Кінець заборони обгону вантажним автомобілям", 1),
                new Questions(getString(R.string.q3_26), "Обгін заборонено", "Кінець заборони обгону", "Обгін вантажним автомобілям заборонено", "Кінець заборони обгону вантажним автомобілям", 2),
                new Questions(getString(R.string.q3_27), "Обгін заборонено", "Кінець заборони обгону", "Обгін вантажним автомобілям заборонено", "Кінець заборони обгону вантажним автомобілям", 3),
                new Questions(getString(R.string.q3_28), "Обгін заборонено", "Кінець заборони обгону", "Обгін вантажним автомобілям заборонено", "Кінець заборони обгону вантажним автомобілям", 4),
                new Questions(getString(R.string.q3_29), "Обмеження максимальної швидкості", "Зона обмеження максимальної швидкості", "Обмеження мінімальної швидкості", "Рекомендована швидкість", 1),
                new Questions(getString(R.string.q3_30), "Рекомендована швидкість", "Кінець обмеження мінімальної швидкості", "Кінець обмеження максимальної швидкості", "Кінець зони обмеження максимальної швидкості", 3),
                new Questions(getString(R.string.q3_31), "Обмеження максимальної швидкості", "Зона обмеження максимальної швидкості", "Обмеження мінімальної швидкості", "Рекомендована швидкість", 2),
                new Questions(getString(R.string.q3_32), "Рекомендована швидкість", "Кінець обмеження мінімальної швидкості", "Кінець обмеження максимальної швидкості", "Кінець зони обмеження максимальної швидкості", 4),
                new Questions(getString(R.string.q3_33), "Рух гужових возів (саней) заборонено", "Контроль", "Подачу звукового сигналу заборонено", "Митниця", 3),
                new Questions(getString(R.string.q3_34), "Зупинку заборонено", "Стоянку заборонено", "Обгін вантажним автомобілям заборонено", "Обгін заборонено", 1),
                new Questions(getString(R.string.q3_35), "Стоянку заборонено в парні числа місяця", "Зона обмеженої стоянки", "Стоянку заборонено в непарні числа місяця", "Стоянку заборонено", 4),
                new Questions(getString(R.string.q3_36), "Стоянку заборонено в непарні числа місяця", "Зона обмеженої стоянки", "Стоянку заборонено в парні числа місяця", "Стоянку заборонено", 1),
                new Questions(getString(R.string.q3_37), "Стоянку заборонено в парні числа місяця", "Зона обмеженої стоянки", "Стоянку заборонено в непарні числа місяця", "Стоянку заборонено", 1),
                new Questions(getString(R.string.q3_38), "Кінець усіх заборон і обмежень", "Кінець зони стоянки", "Зона обмеженої стоянки", "Зона обмеження максимальної швидкості", 3),
                new Questions(getString(R.string.q3_39), "Кінець усіх заборон і обмежень", "Кінець зони обмеження максимальної швидкості", "Кінець обмеження максимальної швидкості", "Кінець зони обмеженої стоянки", 4),
                new Questions(getString(R.string.q3_40), "Місце зупинки", "Контроль", "Митниця", "Небезпека", 3),
                new Questions(getString(R.string.q3_41), "Митниця", "Місце зупинки", "Небезпека", "Контроль", 4),
                new Questions(getString(R.string.q3_42), "Кінець усіх заборон і обмежень", "Кінець зони обмеження максимальної швидкості", "Кінець обмеження максимальної швидкості", "Кінець зони обмеженої стоянки", 1),
                new Questions(getString(R.string.q3_43), "Місце зупинки", "Небезпека", "Митниця", "Контроль", 2),


                new Questions(getString(R.string.q4_1), "Рух прямо або праворуч", "Рух прямо або ліворуч", "Рух прямо", "Об'їзд перешкоди з правого або лівого боку", 3),
                new Questions(getString(R.string.q4_2), "Рух праворуч", "Об'їзд перешкоди з правого або лівого боку", "Рух прямо або праворуч", "Об'їзд перешкоди з правого боку", 1),
                new Questions(getString(R.string.q4_3), "Об'їзд перешкоди з правого або лівого боку", "Рух прямо або ліворуч", "Об'їзд перешкоди з лівого боку", "Рух ліворуч", 4),
                new Questions(getString(R.string.q4_4), "Об'їзд перешкоди з правого боку", "Рух прямо або праворуч", "Рух праворуч", "Рух прямо", 2),
                new Questions(getString(R.string.q4_5), "Рух прямо", "Рух ліворуч", "Об'їзд перешкоди з лівого боку", "Рух прямо або ліворуч", 4),
                new Questions(getString(R.string.q4_6), "Рух праворуч", "Об'їзд перешкоди з правого або лівого боку", "Рух праворуч або ліворуч", "Рух ліворуч", 3),
                new Questions(getString(R.string.q4_7), "Рух прямо або праворуч", "Об'їзд перешкоди з правого боку", "Об'їзд перешкоди з правого або лівого боку", "Рух праворуч", 2),
                new Questions(getString(R.string.q4_8), "Об'їзд перешкоди з правого або лівого боку", "Рух прямо або ліворуч", "Рух ліворуч", "Об'їзд перешкоди з лівого боку", 4),
                new Questions(getString(R.string.q4_9), "Рух прямо", "Рух праворуч або ліворуч", "Об'їзд перешкоди з правого або лівого боку", "Круговий рух", 3),
                new Questions(getString(R.string.q4_10), "Круговий рух", "Схема об’їзду", "Місце для розвороту", "Схема руху", 1),
                new Questions(getString(R.string.q4_11), "Місце зупинки таксі", "Рух механічних транспортних засобів заборонено", "Рух транспортних засобів, що перевозять вибухівку, заборонено", "Рух легкових автомобілів", 4),
                new Questions(getString(R.string.q4_12), "Рух на велосипедах заборонено", "Доріжка для велосипедистів", "Доріжка для пішоходів і велосипедистів", "Житлова зона", 2),
                new Questions(getString(R.string.q4_13), "Рух пішоходів заборонено", "Доріжка для пішоходів і велосипедистів", "Доріжка для вершників", "Доріжка для пішоходів", 4),
                new Questions(getString(R.string.q4_14), "Рух пішоходів заборонено", "Доріжка для пішоходів і велосипедистів", "Доріжка для вершників", "Доріжка для пішоходів", 2),
                new Questions(getString(R.string.q4_15), "Рух пішоходів заборонено", "Доріжка для пішоходів і велосипедистів", "Доріжка для вершників", "Доріжка для пішоходів", 3),
                new Questions(getString(R.string.q4_16), "Рекомендована швидкість", "Зона обмеження максимальної швидкості", "Обмеження мінімальної швидкості", "Обмеження максимальної швидкості", 3),
                new Questions(getString(R.string.q4_17), "Кінець усіх заборон і обмежень", "Кінець обмеження максимальної швидкості", "Кінець зони обмеження максимальної швидкості", "Кінець обмеження мінімальної швидкості", 4),
                new Questions(getString(R.string.q4_18_1), "Рух вантажних автомобілів заборонено", "Рух транспортних засобів, що перевозять речовини, які забруднюють воду, заборонено", "Напрямок руху транспортних засобів з небезпечними вантажами", "Рух транспортних засобів, що перевозять небезпечні вантажі, заборонено", 3),


                new Questions(getString(R.string.q5_1), "Дорога для автомобілів", "Смуга для руху маршрутних транспортних засобів", "Автомагістраль", "Виїзд на дорогу із смугою для руху маршрутних транспортних засобів", 3),
                new Questions(getString(R.string.q5_2), "Кінець дороги для автомобілів", "Кінець дороги з одностороннім рухом", "Кінець дороги із смугою для руху маршрутних транспортних засобів", "Кінець автомагістралі", 4),
                new Questions(getString(R.string.q5_3), "Дорога для автомобілів", "Смуга для руху маршрутних транспортних засобів", "Автомагістраль", "Виїзд на дорогу із смугою для руху маршрутних транспортних засобів", 1),
                new Questions(getString(R.string.q5_4), "Кінець дороги для автомобілів", "Кінець дороги з одностороннім рухом", "Кінець дороги із смугою для руху маршрутних транспортних засобів", "Кінець автомагістралі", 1),
                new Questions(getString(R.string.q5_5), "Дорога з реверсивним рухом", "Виїзд на дорогу з одностороннім рухом", "Смуга для руху маршрутних транспортних засобів", "Дорога з одностороннім рухом", 4),
                new Questions(getString(R.string.q5_6), "Кінець дороги з реверсивним рухом", "Кінець дороги з одностороннім рухом", "Кінець смуги для руху маршрутних транспортних засобів", "Кінець дороги із смугою для руху маршрутних транспортних засобів", 2),
                new Questions(getString(R.string.q5_7_1), "Напрямок руху по смузі", "Дорога із смугою для руху маршрутних транспортних засобів", "Дорога з реверсивним рухом", "Виїзд на дорогу з одностороннім рухом", 4),
                new Questions(getString(R.string.q5_8), "Дорога із смугою для руху маршрутних транспортних засобів", "Кінець додаткової смуги руху", "Напрямок руху по смугах", "Дорога з реверсивним рухом", 1),
                new Questions(getString(R.string.q5_9), "Кінець дороги із смугою для руху маршрутних транспортних засобів", "Зміна напрямку руху на дорозі з розділювальною смугою", "Кінець смуги для руху маршрутних транспортних засобів", "Кінець дороги з реверсивним рухом", 1),
                new Questions(getString(R.string.q5_10_1), "Дорога для автомобілів", "Смуга для руху маршрутних транспортних засобі", "Автомагістраль", "Виїзд на дорогу із смугою для руху маршрутних транспортних засобів", 4),
                new Questions(getString(R.string.q5_11), "Дорога для автомобілів", "Смуга для руху маршрутних транспортних засобі", "Автомагістраль", "Виїзд на дорогу із смугою для руху маршрутних транспортних засобів", 2),
                new Questions(getString(R.string.q5_12), "Кінець смуги для руху маршрутних транспортних засобів", "Зміна схеми руху", "Кінець дороги з реверсивним рухом", "Кінець прикордонної смуги", 1),
                new Questions(getString(R.string.q5_13), "Пункт зупинки автобуса", "Напрямок руху по смузі", "Кінець додаткової смуги руху", "Дорога з реверсивним рухом", 4),
                new Questions(getString(R.string.q5_14), "Кінець прикордонної смуги", "Зміна схеми руху", "Кінець смуги для руху маршрутних транспортних засобів", "Кінець дороги з реверсивним рухом", 4),
                new Questions(getString(R.string.q5_15), "Зміна напрямку руху на дорозі з розділювальною смугою", "Виїзд на дорогу з реверсивним рухом", "Початок додаткової смуги руху", "Прилягання смуги для розгону транспортних засобів", 2),
                new Questions(getString(R.string.q5_16), "Покажчик напрямків", "Прилягання смуги для розгону транспортних засобів", "Початок додаткової смуги руху", "Напрямки руху по смугах", 4),
                //new Questions(getString(R.string.q5_17_1),"","","","",2),
                //new Questions(getString(R.string.q5_18),"","","","",2),
                new Questions(getString(R.string.q5_19), "Використання смуги руху", "Прилягання смуги для розгону транспортних засобів", "Початок додаткової смуги руху", "Зміна напрямку руху на дорозі з розділювальною смугою", 1),
                new Questions(getString(R.string.q5_20_1), "Кінець додаткової смуги руху", "Прилягання смуги для розгону транспортних засобів", "Початок додаткової смуги руху", "Зміна напрямку руху на дорозі з розділювальною смугою", 3),
                new Questions(getString(R.string.q5_21_1), "Смуга руху для аварійної зупинки", "Кінець додаткової смуги руху", "Прилягання додаткової смуги руху з правого боку", "Прилягання смуги для розгону транспортних засобів", 2),
                new Questions(getString(R.string.q5_22), "Зміна напрямку руху на дорозі з розділювальною смугою", "Місце для розвороту", "Прилягання смуги для розгону транспортних засобів", "Прилягання додаткової смуги руху з правого боку", 3),
                new Questions(getString(R.string.q5_23), "Зміна напрямку руху на дорозі з розділювальною смугою", "Місце для розвороту", "Прилягання смуги для розгону транспортних засобів", "Прилягання додаткової смуги руху з правого боку", 4),
                new Questions(getString(R.string.q5_24_1), "Зміна напрямку руху на дорозі з розділювальною смугою", "Місце для розвороту", "Прилягання смуги для розгону транспортних засобів", "Прилягання додаткової смуги руху з правого боку", 1),
                new Questions(getString(R.string.q5_25), "Смуга руху для аварійної зупинки", "Кінець додаткової смуги руху", "Прилягання додаткової смуги руху з правого боку", "Прилягання смуги для розгону транспортних засобів", 1),
                new Questions(getString(R.string.q5_26), "Зміна напрямку руху на дорозі з розділювальною смугою", "Місце для розвороту", "Прилягання смуги для розгону транспортних засобів", "Прилягання додаткової смуги руху з правого боку", 2),
                new Questions(getString(R.string.q5_27), "Початок додаткової смуги руху", "Зміна напрямку руху на дорозі з розділювальною смугою", "Зона для розвороту", "Напрямок руху для вантажних автомобілів", 3),
                new Questions(getString(R.string.q5_28_2), "Схема об'їзду", "Початок додаткової смуги руху", "Пункт зупинки автобуса", "Напрямок руху для вантажних автомобілів", 4),
                new Questions(getString(R.string.q5_29_2), "Кінець додаткової смуги руху", "Смуга руху для аварійної зупинки", "Місце для розвороту", "Тупик", 4),
                new Questions(getString(R.string.q5_30), "Обмеження максимальної швидкості", "Зона обмеження максимальної швидкості", "Обмеження мінімальної швидкості", "Рекомендована швидкість", 4),
                new Questions(getString(R.string.q5_31), "Житлова зона", "Підземний пішохідний перехід", "Пішохідний перехід", "Пішохідна зона", 1),
                new Questions(getString(R.string.q5_32), "Кінець населеного пункту", "Кінець пішохідної зони", "Кінець зони стоянки", "Кінець житлової зони", 4),
                new Questions(getString(R.string.q5_33), "Житлова зона", "Підземний пішохідний перехід", "Пішохідний перехід", "Пішохідна зона", 4),
                new Questions(getString(R.string.q5_34), "Кінець населеного пункту", "Кінець пішохідної зони", "Кінець зони стоянки", "Кінець житлової зони", 2),
                new Questions(getString(R.string.q5_35_1), "Пішохідна зона", "Надземний пішохідний перехід", "Пішохідний перехід", "Підземний пішохідний перехід", 3),
                new Questions(getString(R.string.q5_36_1), "Пішохідна зона", "Надземний пішохідний перехід", "Пішохідний перехід", "Підземний пішохідний перехід", 4),
                new Questions(getString(R.string.q5_37_1), "Пішохідна зона", "Надземний пішохідний перехід", "Пішохідний перехід", "Підземний пішохідний перехід", 2),
                new Questions(getString(R.string.q5_38), "Зона стоянки", "Місце для стоянки", "Житлова зона", "Пішохідна зона", 2),
                new Questions(getString(R.string.q5_39), "Зона стоянки", "Місце для стоянки", "Житлова зона", "Пішохідна зона", 1),
                new Questions(getString(R.string.q5_40), "Тупик", "Кінець житлової зони", "Кінець пішохідної зони", "Кінець зони стоянки", 4),
                new Questions(getString(R.string.q5_41_1), "Пункт зупинки автобуса", "Місце зупинки таксі", "Пункт зупинки трамвая", "Пункт зупинки тролейбуса", 1),
                new Questions(getString(R.string.q5_42_1), "Пункт зупинки автобуса", "Місце зупинки таксі", "Пункт зупинки трамвая", "Пункт зупинки тролейбуса", 3),
                new Questions(getString(R.string.q5_43_1), "Пункт зупинки автобуса", "Місце зупинки таксі", "Пункт зупинки трамвая", "Пункт зупинки тролейбуса", 4),
                new Questions(getString(R.string.q5_44), "Пункт зупинки автобуса", "Місце зупинки таксі", "Пункт зупинки трамвая", "Пункт зупинки тролейбуса", 2),
                new Questions(getString(R.string.q5_45), "Початок населеного пункту", "Попередній покажчик напрямку", "Початок щільної забудови", "Назва об’єкта", 1),
                new Questions(getString(R.string.q5_46), "Кінець контрольованого прикордонного району", "Кінець прикордонної смуги", "Кінець щільної забудови", "Кінець населеного пункту", 4),
                new Questions(getString(R.string.q5_47), "Початок населеного пункту", "Попередній покажчик напрямку", "Початок щільної забудови", "Назва об’єкта", 1),
                new Questions(getString(R.string.q5_48), "Кінець контрольованого прикордонного району", "Кінець прикордонної смуги", "Кінець щільної забудови", "Кінець населеного пункту", 4),
                //new Questions(getString(R.string.q5_49),"","","","",2),
                //new Questions(getString(R.string.q5_50),"","","","",2),
                new Questions(getString(R.string.q5_51), "Попередній покажчик напрямків", "Покажчик відстаней", "Схема руху", "Схема об'їзду", 1),
                new Questions(getString(R.string.q5_52), "Початок населеного пункту", "Попередній покажчик напрямку", "Початок щільної забудови", "Назва об’єкта", 2),
                new Questions(getString(R.string.q5_53), "Кілометровий знак", "Покажчик напрямку", "Напрямок об'їзду", "Назва об’єкта", 2),
                new Questions(getString(R.string.q5_54), "Кілометровий знак", "Покажчик напрямків", "Напрямок об'їзду", "Назва об’єкта", 2),
                new Questions(getString(R.string.q5_55), "Попередній покажчик напрямків", "Покажчик відстаней", "Схема руху", "Схема об'їзду", 3),
                new Questions(getString(R.string.q5_56), "Попередній покажчик напрямків", "Покажчик відстаней", "Схема руху", "Схема об'їзду", 4),
                new Questions(getString(R.string.q5_57_2), "Кілометровий знак", "Покажчик напрямку", "Напрямок об'їзду", "Назва об’єкта", 3),
                new Questions(getString(R.string.q5_58_1), "Початок населеного пункту", "Попередній покажчик напрямку", "Початок щільної забудови", "Назва об’єкта", 4),
                new Questions(getString(R.string.q5_59), "Попередній покажчик напрямків", "Покажчик відстаней", "Схема руху", "Схема об'їзду", 2),
                new Questions(getString(R.string.q5_60), "Кілометровий знак", "Покажчик напрямку", "Напрямок об'їзду", "Назва об’єкта", 4),
                new Questions(getString(R.string.q5_61_2), "Назва об’єкта", "Кілометровий знак", "Покажчик відстаней", "Номер маршруту", 4),
                new Questions(getString(R.string.q5_62), "Місце зупинки", "Тупик", "В'їзд заборонено", "Кінець населеного пункту", 1),
                new Questions(getString(R.string.q5_63_1), "Початок населеного пункту", "Попередній покажчик напрямку", "Початок щільної забудови", "Назва об’єкта", 3),
                new Questions(getString(R.string.q5_63_2), "Кінець контрольованого прикордонного району", "Кінець прикордонної смуги", "Кінець щільної забудови", "Кінець населеного пункту", 3),
                //new Questions(getString(R.string.q5_64),"","","","",2),
                new Questions(getString(R.string.q5_65), "Аеропорт", "Автовокзал чи автостанція", "Низьколітаючі літаки", "Залізничний вокзал чи пункт зупинки поїздів", 1),
                new Questions(getString(R.string.q5_66), "Культова споруда", "Аеропорт", "Залізничний вокзал чи пункт зупинки поїздів", "Автовокзал чи автостанція", 3),
                new Questions(getString(R.string.q5_67), "Культова споруда", "Аеропорт", "Залізничний вокзал чи пункт зупинки поїздів", "Автовокзал чи автостанція", 4),
                new Questions(getString(R.string.q5_68), "Культова споруда", "Аеропорт", "Залізничний вокзал чи пункт зупинки поїздів", "Автовокзал чи автостанція", 1),
                new Questions(getString(R.string.q5_69), "Культова споруда", "Промислова зона", "Залізничний вокзал чи пункт зупинки поїздів", "Автовокзал чи автостанція", 2),
                new Questions(getString(R.string.q5_70), "Культова споруда", "Промислова зона", "Залізничний вокзал чи пункт зупинки поїздів", "Фото-, відеофіксування порушень Правил дорожнього руху", 4),
                new Questions(getString(R.string.q5_71), "Початок населеного пункту", "Початок прикордонної смуги", "Початок щільної забудови", "Назва об’єкта", 2),
                new Questions(getString(R.string.q5_72), "Кінець контрольованого прикордонного району", "Кінець прикордонної смуги", "Кінець щільної забудови", "Кінець населеного пункту", 2),
                new Questions(getString(R.string.q5_73), "Початок населеного пункту", "Попередній покажчик напрямку", "Початок щільної забудови", "Початок контрольованого прикордонного району", 4),
                new Questions(getString(R.string.q5_74), "Кінець контрольованого прикордонного району", "Кінець прикордонної смуги", "Кінець щільної забудови", "Кінець населеного пункту", 1),
        };

        imageView2 = (ImageView) findViewById(R.id.imageView2);
        button = (Button) findViewById(R.id.button);
        button2 = (Button) findViewById(R.id.button2);
        button3 = (Button) findViewById(R.id.button3);
        button4 = (Button) findViewById(R.id.button4);
        buttonEndTest = (Button) findViewById(R.id.buttonEndTest);

        generateRandomNumb();


        //Drawable q = getResources().getDrawable(R.drawable.ic_untitled_7);
        Picasso.with(this)
                .load(questions[randomNumbers].getUrlImages())
                .into(imageView2);
        button.setText(questions[randomNumbers].getAnswer1());
        button2.setText(questions[randomNumbers].getAnswer2());
        button3.setText(questions[randomNumbers].getAnswer3());
        button4.setText(questions[randomNumbers].getAnswer4());

        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                TRUE_ANSWER++;
                if (questions[randomNumbers].getTrueAnswer() == 1) {
                    generateRandomNumb();
                    button.setBackgroundResource(R.drawable.button_test_top_left_true);
                    clickableFalse();

                    Handler handler = new Handler();
                    handler.postDelayed(new Runnable() {
                        public void run() {
                            button.setBackgroundResource(R.drawable.button_test_top_left);
                            clickableTrue();
                            Picasso.with(TestActivity.this)
                                    .load(questions[randomNumbers].getUrlImages())
                                    .into(imageView2);
                            button.setText(questions[randomNumbers].getAnswer1());
                            button2.setText(questions[randomNumbers].getAnswer2());
                            button3.setText(questions[randomNumbers].getAnswer3());
                            button4.setText(questions[randomNumbers].getAnswer4());
                        }
                    }, 2000);


                } else {

                    FALSE_ANSWER++;
                    button.setBackgroundResource(R.drawable.button_test_top_left_false);
                    clickableFalse();

                    if ((questions[randomNumbers].getTrueAnswer() == 2) == true) {
                        button2.setBackgroundResource(R.drawable.button_test_top_right_true);
                    } else if ((questions[randomNumbers].getTrueAnswer() == 3) == true) {
                        button3.setBackgroundResource(R.drawable.button_test_down_left_true);
                    } else if ((questions[randomNumbers].getTrueAnswer() == 4) == true) {
                        button4.setBackgroundResource(R.drawable.button_test_down_right_true);
                    }
                    generateRandomNumb();

                    Handler handler = new Handler();
                    handler.postDelayed(new Runnable() {
                        public void run() {
                            button.setBackgroundResource(R.drawable.button_test_top_left);
                            button2.setBackgroundResource(R.drawable.button_test_top_right);
                            button3.setBackgroundResource(R.drawable.button_test_down_left);
                            button4.setBackgroundResource(R.drawable.button_test_down_right);
                            clickableTrue();

                            //Toast.makeText(TestActivity.this, "TRUE", Toast.LENGTH_SHORT).show();
                            Picasso.with(TestActivity.this)
                                    .load(questions[randomNumbers].getUrlImages())
                                    .into(imageView2);
                            button.setText(questions[randomNumbers].getAnswer1());
                            button2.setText(questions[randomNumbers].getAnswer2());
                            button3.setText(questions[randomNumbers].getAnswer3());
                            button4.setText(questions[randomNumbers].getAnswer4());
                        }
                    }, 3000);


                }

            }
        });
        button2.setOnClickListener(new View.OnClickListener() {

            public void onClick(View view) {
                TRUE_ANSWER++;
                if (questions[randomNumbers].getTrueAnswer() == 2) {
                    generateRandomNumb();
                    button2.setBackgroundResource(R.drawable.button_test_top_right_true);
                    clickableFalse();

                    Handler handler = new Handler();
                    handler.postDelayed(new Runnable() {
                        public void run() {
                            button2.setBackgroundResource(R.drawable.button_test_top_right);
                            clickableTrue();

                            Picasso.with(TestActivity.this)
                                    .load(questions[randomNumbers].getUrlImages())
                                    .into(imageView2);
                            button.setText(questions[randomNumbers].getAnswer1());
                            button2.setText(questions[randomNumbers].getAnswer2());
                            button3.setText(questions[randomNumbers].getAnswer3());
                            button4.setText(questions[randomNumbers].getAnswer4());
                        }
                    }, 2000);

                } else {
                    FALSE_ANSWER++;
                    button2.setBackgroundResource(R.drawable.button_test_top_right_false);
                    clickableFalse();
                    if ((questions[randomNumbers].getTrueAnswer() == 1) == true) {
                        button.setBackgroundResource(R.drawable.button_test_top_left_true);
                    } else if ((questions[randomNumbers].getTrueAnswer() == 3) == true) {
                        button3.setBackgroundResource(R.drawable.button_test_down_left_true);
                    } else if ((questions[randomNumbers].getTrueAnswer() == 4) == true) {
                        button4.setBackgroundResource(R.drawable.button_test_down_right_true);
                    }
                    generateRandomNumb();

                    Handler handler = new Handler();
                    handler.postDelayed(new Runnable() {
                        public void run() {
                            button.setBackgroundResource(R.drawable.button_test_top_left);
                            button2.setBackgroundResource(R.drawable.button_test_top_right);
                            button3.setBackgroundResource(R.drawable.button_test_down_left);
                            button4.setBackgroundResource(R.drawable.button_test_down_right);
                            clickableTrue();

                            //Toast.makeText(TestActivity.this, "TRUE", Toast.LENGTH_SHORT).show();
                            Picasso.with(TestActivity.this)
                                    .load(questions[randomNumbers].getUrlImages())
                                    .into(imageView2);
                            button.setText(questions[randomNumbers].getAnswer1());
                            button2.setText(questions[randomNumbers].getAnswer2());
                            button3.setText(questions[randomNumbers].getAnswer3());
                            button4.setText(questions[randomNumbers].getAnswer4());
                        }
                    }, 3000);
                }
            }
        });
        button3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                TRUE_ANSWER++;
                if (questions[randomNumbers].getTrueAnswer() == 3) {
                    generateRandomNumb();
                    button3.setBackgroundResource(R.drawable.button_test_down_left_true);
                    clickableFalse();

                    Handler handler = new Handler();
                    handler.postDelayed(new Runnable() {
                        public void run() {
                            button3.setBackgroundResource(R.drawable.button_test_down_left);
                            clickableTrue();

                            Picasso.with(TestActivity.this)
                                    .load(questions[randomNumbers].getUrlImages())
                                    .into(imageView2);
                            button.setText(questions[randomNumbers].getAnswer1());
                            button2.setText(questions[randomNumbers].getAnswer2());
                            button3.setText(questions[randomNumbers].getAnswer3());
                            button4.setText(questions[randomNumbers].getAnswer4());
                        }
                    }, 2000);

                } else {
                    FALSE_ANSWER++;
                    button3.setBackgroundResource(R.drawable.button_test_down_left_false);
                    clickableFalse();
                    if ((questions[randomNumbers].getTrueAnswer() == 1) == true) {
                        button.setBackgroundResource(R.drawable.button_test_top_left_true);
                    } else if ((questions[randomNumbers].getTrueAnswer() == 2) == true) {
                        button2.setBackgroundResource(R.drawable.button_test_top_right_true);
                    } else if ((questions[randomNumbers].getTrueAnswer() == 4) == true) {
                        button4.setBackgroundResource(R.drawable.button_test_down_right_true);
                    }
                    generateRandomNumb();

                    Handler handler = new Handler();
                    handler.postDelayed(new Runnable() {
                        public void run() {
                            button.setBackgroundResource(R.drawable.button_test_top_left);
                            button2.setBackgroundResource(R.drawable.button_test_top_right);
                            button3.setBackgroundResource(R.drawable.button_test_down_left);
                            button4.setBackgroundResource(R.drawable.button_test_down_right);
                            clickableTrue();

                            //Toast.makeText(TestActivity.this, "TRUE", Toast.LENGTH_SHORT).show();
                            Picasso.with(TestActivity.this)
                                    .load(questions[randomNumbers].getUrlImages())
                                    .into(imageView2);
                            button.setText(questions[randomNumbers].getAnswer1());
                            button2.setText(questions[randomNumbers].getAnswer2());
                            button3.setText(questions[randomNumbers].getAnswer3());
                            button4.setText(questions[randomNumbers].getAnswer4());
                        }
                    }, 3000);

                }
            }
        });
        button4.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                TRUE_ANSWER++;
                if (questions[randomNumbers].getTrueAnswer() == 4) {
                    generateRandomNumb();
                    button4.setBackgroundResource(R.drawable.button_test_down_right_true);
                    clickableFalse();

                    Handler handler = new Handler();
                    handler.postDelayed(new Runnable() {
                        public void run() {
                            button4.setBackgroundResource(R.drawable.button_test_down_right);
                            clickableTrue();

                            Picasso.with(TestActivity.this)
                                    .load(questions[randomNumbers].getUrlImages())
                                    .into(imageView2);
                            button.setText(questions[randomNumbers].getAnswer1());
                            button2.setText(questions[randomNumbers].getAnswer2());
                            button3.setText(questions[randomNumbers].getAnswer3());
                            button4.setText(questions[randomNumbers].getAnswer4());
                        }
                    }, 2000);

                } else {
                    FALSE_ANSWER++;
                    button4.setBackgroundResource(R.drawable.button_test_down_right_false);
                    clickableFalse();
                    if ((questions[randomNumbers].getTrueAnswer() == 1) == true) {
                        button.setBackgroundResource(R.drawable.button_test_top_left_true);
                    } else if ((questions[randomNumbers].getTrueAnswer() == 2) == true) {
                        button2.setBackgroundResource(R.drawable.button_test_top_right_true);
                    } else if ((questions[randomNumbers].getTrueAnswer() == 3) == true) {
                        button3.setBackgroundResource(R.drawable.button_test_down_left_true);
                    }
                    generateRandomNumb();

                    Handler handler = new Handler();
                    handler.postDelayed(new Runnable() {
                        public void run() {
                            button.setBackgroundResource(R.drawable.button_test_top_left);
                            button2.setBackgroundResource(R.drawable.button_test_top_right);
                            button3.setBackgroundResource(R.drawable.button_test_down_left);
                            button4.setBackgroundResource(R.drawable.button_test_down_right);
                            clickableTrue();

                            //Toast.makeText(TestActivity.this, "TRUE", Toast.LENGTH_SHORT).show();
                            Picasso.with(TestActivity.this)
                                    .load(questions[randomNumbers].getUrlImages())
                                    .into(imageView2);
                            button.setText(questions[randomNumbers].getAnswer1());
                            button2.setText(questions[randomNumbers].getAnswer2());
                            button3.setText(questions[randomNumbers].getAnswer3());
                            button4.setText(questions[randomNumbers].getAnswer4());
                        }
                    }, 3000);

                }
            }
        });

        buttonEndTest.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String toastString = "True answer " + TRUE_ANSWER + "  /  False answer " + FALSE_ANSWER;
                Toast.makeText(TestActivity.this, toastString, Toast.LENGTH_LONG).show();
            }
        });

    }

    public void generateRandomNumb() {
        Random random = new Random();
        int random1 = random.nextInt(88);
        int random2 = random.nextInt(88);
        randomNumbers = random1 + random2;
    }

    public void clickableFalse() {
        button.setClickable(false);
        button2.setClickable(false);
        button3.setClickable(false);
        button4.setClickable(false);
    }

    public void clickableTrue() {
        button.setClickable(true);
        button2.setClickable(true);
        button3.setClickable(true);
        button4.setClickable(true);
    }
}
